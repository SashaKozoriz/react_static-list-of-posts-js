{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","length","map","id","UserInfo","user","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,EAAQE,OAE9C,OACD,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SAAoCD,EAAQK,WCVnCC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzBA,EAASC,OAAS,EAChB,qBAAKP,UAAU,cAAf,SACGM,EAASE,KAAI,SAAAT,GAAO,OACnB,cAAC,EAAD,CAEEA,QAASA,GADJA,EAAQU,SAMnB,qCACE,uBACA,mBAAG,UAAQ,oBAAX,kCCfOC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mCACE,mBACEX,UAAU,WACVE,KAAI,iBAAYS,EAAKR,OAFvB,SAIGQ,EAAKV,WCJCW,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mCACE,sBACEb,UAAU,WADZ,UAGE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCa,EAAKC,QAEtC,8BACG,eACD,cAAC,EAAD,CAAUH,KAAME,EAAKF,aAIzB,mBAAGX,UAAU,iBAAb,SAA+Ba,EAAKT,OAEpC,cAAC,EAAD,CAAaE,SAAUO,EAAKP,kBClBrBS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SACGgB,EAAMR,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKJ,UCKlB,IAAMO,EAAQC,EAAgBT,KAAI,SAAAK,GAAI,kCACjCA,GADiC,IAEpCF,MANoBO,EAMDL,EAAKK,OALjBC,EAAgBC,MAAK,SAAAT,GAAI,OAAIA,EAAKF,KAAOS,MAMhDZ,SAAUe,EAAmBC,QAAO,SAAAvB,GAAO,OAAIA,EAAQwB,SAAWV,EAAKJ,QAPzE,IAAsBS,KAUTM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUgB,MAAOA,QChBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a561034a.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{comment.name}</strong>\n\n      {' by '}\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">{comment.body}</div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\n\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  comments.length > 0 ? (\n    <div className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo\n          key={comment.id}\n          comment={comment}\n        />\n      ))}\n    </div>\n  ) : (\n    <>\n      <hr />\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    </>\n  )\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <>\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user.email}`}\n    >\n      {user.name}\n    </a>\n  </>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => (\n  <>\n    <div\n      className=\"PostInfo\"\n    >\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{post.title}</h3>\n\n        <p>\n          {' Posted by  '}\n          <UserInfo user={post.user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">{post.body}</p>\n\n      <CommentList comments={post.comments} />\n    </div>\n  </>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        key={post.id}\n        post={post}\n      />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction findUserById(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: findUserById(post.userId),\n  comments: commentsFromServer.filter(comment => comment.postId === post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}